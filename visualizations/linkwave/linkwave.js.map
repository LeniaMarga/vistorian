{"version":3,"sources":["features.ts","clustering.ts","sorting.ts","linkwave.ts"],"names":[],"mappings":"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","file":"networkcube/visualizations/linkwave/linkwave.js","sourcesContent":["///-----------------------------------------------------------------------------------------------------------------\n/// features.ts.  Copyright (c) 2014 Microsoft Corporation.\n///     - metric and feature computation libraries for LinkWave.\n///-----------------------------------------------------------------------------------------------------------------\ndeclare var numeric: any;\n\n    class Features {\n\n        // libraries for features\n        static computeArithemeticFeatures(corrSeg: number[]) {\n            var length = corrSeg.length;\n\n\n            // amplitude features\n            var min = 1000000;\n            var max = -1000000;\n            var mean = 0;\n            var std = 0;\n            var thresholds = [0.1, 0.3, 0.5, 0.7];\n            var posAreaByThresholds = [0, 0, 0, 0];\n\n            // slope features\n            var minSlope = 1000000;\n            var maxSlope = -1000000;\n            var meanSlope = 0;\n\n            // borderline features\n            var crossZero = 0;\n            var posRatio = 0;\n            var negRatio = 0;\n\n            // geometrical features\n            var numPeaks = 0;\n            var numValley = 0;\n            var startPoint = 0;\n            var endPoint = 0;\n            var startAngle = 0;\n            var endAngle = 0;\n            var startEndPoints = [];\n\n            // statistical features\n            var skewness = 0;\n            var kurtosis = 0;\n            var autocorrelation = 0;\n\n            for (var i = 0; i < length; i++) {\n                \n                // if condition for local window based features\n                if (i > 0 && i < length - 2) {\n                    // peaks & velley\n                    if (corrSeg[i - 1] < corrSeg[i] && corrSeg[i] > corrSeg[i + 1]) {\n                        numPeaks = numPeaks + 1;\n                    }\n                    else if (corrSeg[i - 1] > corrSeg[i] && corrSeg[i] < corrSeg[i + 1]) {\n                        numValley = numValley + 1;\n                    }\n\n                    // cross zero line\n                    // positive -> negative, signal ending\n                    if (corrSeg[i - 1] > 0 && corrSeg[i] <= 0 && corrSeg[i + 1] <= 0) {\n                        crossZero = crossZero + 1;\n\n                        //signal ending point\n                        startEndPoints.push({type: \"end\", pos: i});\n                    }\n                    // negative -> positive, signal starting\n                    else if (corrSeg[i - 1] <= 0 && corrSeg[i] > 0 && corrSeg[i + 1] > 0) {\n                        crossZero = crossZero + 1;\n\n                        //signal starting point\n                        startEndPoints.push({ type: \"start\", pos: i });\n                    }\n                }\n\n                // slope features\n                if (i < length - 2) {\n                    var slope = corrSeg[i + 1] - corrSeg[i];\n\n                    // max slope\n                    if (slope > maxSlope) { maxSlope = slope; }\n                    // min slope\n                    if (slope < minSlope) { minSlope = slope; }\n\n                    meanSlope = meanSlope + slope;\n                }\n\n                // amplitude features\n                // max value\n                if (corrSeg[i] > max) { max = corrSeg[i]; }\n                // min value\n                if (corrSeg[i] < min) { min = corrSeg[i]; }\n\n                // pos vs. neg ratio\n                if (corrSeg[i] > 0) {\n                    posRatio = posRatio + 1;\n                }\n                else { negRatio = negRatio + 1; }\n\n                // mean\n\n                mean = mean + corrSeg[i];\n\n                // positive area above threshold\n                for (var j = 0; j < thresholds.length; j++) {\n                    if (corrSeg[i] > thresholds[j]) {\n                        posAreaByThresholds[j] = posAreaByThresholds[j] + 1;\n                    }\n                }\n            }\n\n            // mean\n            if (mean == 0) {\n                mean = 0;\n            } else {\n                mean = mean / length;\n            }\n\n            // find out the dominant starting and ending point\n            var startEnds = this.computeStartEndPointsAngles(corrSeg, startEndPoints, max)\n            startPoint = startEnds[0];\n            endPoint = startEnds[1];\n            startAngle = startEnds[2];\n            endAngle = startEnds[3];\n\n            // statistical features\n            var skewKurt = this.computeSkewnessKurtosis(corrSeg, mean);\n            skewness = skewKurt[0];\n            kurtosis = skewKurt[1];\n            std = this.computeStd(corrSeg, mean);\n            if (mean == 0) {\n                autocorrelation = 0;\n            } else {\n                autocorrelation = this.computeAutocorrelation(corrSeg, mean, 3); // 3 is order, can be adjusted if needed\n            }\n\n\n            var featureVec =\n            // amplitude\n                [min, max, mean, posAreaByThresholds[0], posAreaByThresholds[1], //posAreaByThresholds[2], posAreaByThresholds[3],\n            // slope\n                minSlope, maxSlope, meanSlope,\n            // cross border\n                crossZero, posRatio, negRatio,// startAngle, endAngle,\n            // global, statistical\n                std, autocorrelation, skewness, kurtosis,\n            // geometrical\n                numPeaks, numValley, startPoint, endPoint];\n\n            // the order of features should be same\n            var featureSpecs = [\"minAmp\", \"maxAmp\", \"meanAmp\", \"posAreaByThreshod\", \"poseAreaByThreshod\",// \"posAreaByThreshod\", \"poseAreaByThreshod\",\n                \"minSlope\", \"maxSlope\", \"meanSlope\",\n                \"crossZero\", \"posRatio\", \"negRatio\",// \"startAngle\", \"endAngle\",\n                \"std\", \"autocorrelation\", \"skewness\", \"kurtosis\",\n                \"numPeaks\", \"numValley\", \"startPoint\", \"endPoint\"];\n      \n            return { featureVec: featureVec, featureSpecs: featureSpecs };\n        }\n\n\n\n        // ---- compute and extract signal features\n        static computeAutocorrelation(corr: number[], mean: number, order: number) {\n            // compute autocorrelation feature of a correlation\n            var sum1 = 0, sum2 = 0;\n            for (var i = 0; i < corr.length - order; i++) {\n                if (i < corr.length - order) {\n                    var temp = (corr[i] - mean) * (corr[i + order] - mean);\n                    sum1 = sum1 + temp;\n                }\n                var diff = corr[i] - mean;\n                sum2 = sum2 + (diff * diff);\n            }\n            return sum1 / sum2;\n        }\n\n        static computeStartEndPointsAngles(corrSeg: number[], startEndPoints: any, max: number) {\n            // find out the dominant starting and ending point\n            // angle features are included in this function - 1st Sep\n            var startPoint = 0;\n            var endPoint = 0;\n            var startAngle = 0;\n            var endAngle = 0;\n            var length = corrSeg.length;\n\n            if (startEndPoints.length == 0 && max != 0) {\n                // when there is no starting or ending point\n                startPoint = 0;\n                endPoint = length; // the last point of the window\n                startAngle = 0;\n                endAngle = 0;\n            }\n            else if (startEndPoints.length == 1) {\n                // when there is only one starting or ending point\n                var positionTemp = startEndPoints[0].pos;\n                if (startEndPoints[0].type == \"start\") {\n                    startPoint = positionTemp;\n                    endPoint = length;\n                    var angleTemp = numeric.atan([corrSeg[positionTemp + 1], 1]);\n                    startAngle = angleTemp[0];\n                    endAngle = 0;\n                } else {\n                    startPoint = 0;\n                    endPoint = positionTemp;\n                    startAngle = 0;\n                    angleTemp = numeric.atan([corrSeg[positionTemp - 1], 1]);\n                    endAngle = angleTemp[0];\n                }\n            }\n            else if (startEndPoints.length > 1) {\n                // if there are more than one ending or starting points, take the dominant one in terms of signal amplitude\n                var startEndPair = [];\n                var prevStatus = startEndPoints[0].type;\n                for (var j = 1; j < startEndPoints.length; j++) {\n\n                    var startTemp = 0;\n                    var endTemp = 0;\n                    if (prevStatus == \"start\") {\n                        startTemp = startEndPoints[j].pos;\n                        if (j + 1 < startEndPoints.length) {\n                            endTemp = startEndPoints[j + 1].pos;\n                        }\n                        else {\n                            endTemp = length;\n                        }\n                        startEndPair.push({ start: startTemp, end: endTemp });\n                        j++;\n                    }\n                    else if (prevStatus == \"end\") {\n                        startTemp = 0;\n                        endTemp = startEndPoints[j].pos;\n\n                        startEndPair.push({ start: startTemp, end: endTemp });\n                    }\n                }\n\n                var massMax = -1000;\n                for (var m = 0; m < startEndPair.length; m++) {\n                    var sum = 0;\n                    for (var n = startEndPair[m].start; n < startEndPair[m].end; n++) {\n                        sum = sum + corrSeg[n];\n                    }\n\n                    if (massMax < sum) {\n                        startTemp = startEndPair[m].start;\n                        endTemp = startEndPair[m].end;\n\n                        massMax = sum;\n                        startPoint = startTemp;\n                        endPoint = endTemp;\n                        angleTemp = numeric.atan([corrSeg[startPoint + 1], 1]);\n                        startAngle = angleTemp[0];\n\n                        numeric.atan([corrSeg[startPoint - 1], 1]);\n                        endAngle = angleTemp[0];\n                    }\n                }\n            }\n\n            return [startPoint, endPoint, startAngle, endAngle];\n        }\n\n        static computeSkewnessKurtosis(corrSeg: number[], mean: number) {\n            // compute skewness and kurtosis features\n            var length = corrSeg.length;\n            var std = this.computeStd(corrSeg, mean);\n\n            var sumSkewness = 0;\n            var sumKurtosis = 0;\n            for (var i = 0; i < corrSeg.length; i++) {\n                var meanDiff = corrSeg[i] - mean;\n                sumSkewness = sumSkewness + Math.pow(meanDiff, 3);\n                sumKurtosis = sumKurtosis + Math.pow(meanDiff, 4);\n            }\n\n            var skewness = sumSkewness / (length * Math.pow(std, 3));\n            var kurtosis = sumKurtosis / (length * Math.pow(std, 4));\n            if (numeric.isNaN(skewness) == true) {\n                skewness = 0;\n            }\n            if (numeric.isNaN(kurtosis) == true) {\n                kurtosis = 0;\n            }\n\n            return [skewness, kurtosis - 3];\n        }\n\n\n        static computeAreaDiff(refCorrSeg: number[], targetCorrSeg: number[]) {\n            // compute area difference features between two signals\n            var diffFromRef = [];\n            for (var j = 0; j < refCorrSeg.length; j++) {\n                if (refCorrSeg[j] >= targetCorrSeg[j]) {\n                    diffFromRef[j] = refCorrSeg[j] - targetCorrSeg[j];\n                }\n                else {\n                    diffFromRef[j] = targetCorrSeg[j] - refCorrSeg[j];\n                }\n            }\n            return d3.sum(diffFromRef) / diffFromRef.length;\n        }\n\n        // signal shape features\n        static localTrendCodingWindow(corrSeg: number[]) {\n            // convert a timeseries into a set of codes which describe \"signal shape\"\n            var codedCorr = [];\n\n            for (var i = 0; i < corrSeg.length; i++) {\n                if (i == 0) {\n                    if (corrSeg[i] > corrSeg[i + 1])\n                        codedCorr[i] = 1;\n                    else if (corrSeg[i] < corrSeg[i + 1])\n                        codedCorr[i] = 2;\n                    else if ((corrSeg[i] == corrSeg[i + 1]) && (corrSeg[i] != 0))\n                        codedCorr[i] = 5;\n                    else if ((corrSeg[i] == corrSeg[i + 1]) && (corrSeg[i] == 0))\n                        codedCorr[i] = 0;\n                }\n                else if (i == corrSeg.length - 1) {\n                    if (corrSeg[i - 1] > corrSeg[i])\n                        codedCorr[i] = 1;\n                    else if (corrSeg[i - 1] < corrSeg[i])\n                        codedCorr[i] = 2;\n                    else if ((corrSeg[i - 1] == corrSeg[i]) && (corrSeg[i] != 0))\n                        codedCorr[i] = 5;\n                    else if ((corrSeg[i - 1] == corrSeg[i]) && (corrSeg[i] == 0))\n                        codedCorr[i] = 0;\n                }\n                else {\n                    if ((corrSeg[i - 1] > corrSeg[i]) && (corrSeg[i] > corrSeg[i + 1])) // monotonically decreasing\n                        codedCorr[i] = 1;\n                    else if ((corrSeg[i - 1] < corrSeg[i]) && (corrSeg[i] < corrSeg[i + 1])) // monotonically increasing\n                        codedCorr[i] = 2;\n                    else if ((corrSeg[i - 1] >= corrSeg[i]) && (corrSeg[i] < corrSeg[i + 1])) // event dec -> inc\n                        codedCorr[i] = 3;\n                    else if ((corrSeg[i - 1] < corrSeg[i]) && (corrSeg[i] >= corrSeg[i + 1])) // event inc -> dec\n                        codedCorr[i] = 4;\n                    else if (((corrSeg[i - 1] == corrSeg[i]) && (corrSeg[i] == corrSeg[i + 1])) && corrSeg[i] != 0) // consistent  // non-decreasing // non-increasing\n                        codedCorr[i] = 5;\n                    else if (((corrSeg[i - 1] == corrSeg[i]) && (corrSeg[i] == corrSeg[i + 1])) && corrSeg[i] == 0) // consistent  // non-decreasing // non-increasing\n                        codedCorr[i] = 0;\n                    else\n                        codedCorr[i] = 6;\n                }\n            }\n            return codedCorr;\n        }\n\n        static calcPearsonsCorrelation(x: number[], y: number[]) {\n\n            if (x.length != y.length) {\n                throw \"Error in calculatePersonsCorrelation: vectors must be the same length\";\n            }\n\n            if (x.length < 2 || y.length < 2) {\n                throw \"Error in calculatePersonsCorrelation: vectors must have length >= 2\";\n            }\n\n            var xSum = 0;\n            var ySum = 0;\n\n            for (var i = 0; i < x.length; i++) {\n                xSum += x[i];\n                ySum += y[i];\n            }\n\n            var xMean = xSum / x.length;\n            var yMean = ySum / y.length;\n\n            var a = x.map(function (value) {\n                return value - xMean;\n            });\n\n            var b = y.map(function (value) {\n                return value - yMean;\n            });\n\n            var sumAB = 0;\n            var sumAA = 0;\n            var sumBB = 0;\n\n            for (var i = 0; i < a.length; i++) {\n                var aValue = a[i];\n                var bValue = b[i];\n\n                sumAB += aValue * bValue;\n                sumAA += aValue * aValue;\n                sumBB += bValue * bValue;\n            }\n\n            var corValue = sumAB / Math.sqrt(sumAA * sumBB);\n            return corValue;\n        }\n\n        static computePairwiseFeatures(ref: number[], target: number[]) {\n            // compute pairwise features\n            var sum = 0;\n\n            // feature 1: difference in area (i.e. difference in signal amplitude)\n            sum = sum + this.computeAreaDiff(ref, target);\n\n            // feature 2: difference in shape\n            var codedRef = this.localTrendCodingWindow(ref);\n            var codedTarget = this.localTrendCodingWindow(target);\n            sum = sum + (1 - this.libDistHamming(ref, target));\n\n            // feature 3: pearson correlation similarity\n            if (numeric.sum(target) > 0) {\n                sum = sum + (1 - this.calcPearsonsCorrelation(ref, target));\n            }\n            return sum;\n        }\n\n        static computeLBPfeatures(corrMat: number[][]) {\n            // compute LBP features\n            var numRow = corrMat.length;\n            var numCol = corrMat[0].length;\n            var LBPfeatures = [];\n\n            var count = 0;\n            for (var y = 1; y < numRow - 1; y++) {\n                for (var x = 1; x < numCol - 1; x++) {\n                    var xCoordinates = [x - 1, x + 1];\n                    var yCoordinates = [y - 1, y + 1];\n\n                    var convertedVec = this.mat2vec(corrMat, xCoordinates, yCoordinates);\n                    LBPfeatures[count] = this.LBPthresholding(convertedVec);\n                    count++;\n                }\n            }\n\n            return LBPfeatures;\n        }\n\n        static LBPthresholding(convertedVec: number[]) {\n            // sub-function of LBP. thresholding by the center point\n            var centerVal = convertedVec[4];\n            var featureCode = [];\n            var count = 0;\n            var sum = 0;\n            for (var i = 0; i < convertedVec.length; i++) {\n                if (i == 4) { continue; }\n\n                if (convertedVec[i] >= centerVal) {\n                    featureCode[count] = 1;\n                } else {\n                    featureCode[count] = 0;\n                }\n                sum = sum + Math.pow(2, 8 - count) * featureCode[count];\n                count++;\n            }\n\n            return sum;\n        }\n\n        static thresholding(vec: number[], thresholds: number[]) {\n            // threshold the input values (i.e. weights in vector form) by predetermined thresholds (threshold can be more than 1).\n            var length = vec.length;\n            var numTaus = thresholds.length;\n            var thresholdedMat = [];\n            var thresholdedVec = [];\n\n            for (var j = 0; j < numTaus; j++) {\n                var tau = thresholds[j];\n                var tempVec = [];\n\n                var lenTemp = thresholdedVec.length;\n                for (var i = 0; i < length; i++) {\n\n                    if (vec[i] >= tau) {\n                        tempVec[i] = vec[i];\n                        thresholdedVec[lenTemp + i] = vec[i];\n                    } else {\n                        tempVec[i] = 0;\n                        thresholdedVec[lenTemp + i] = 0;\n                    }\n                }\n                thresholdedMat[j] = tempVec;\n            }\n\n            return { matForm: thresholdedMat, vecForm: thresholdedVec };\n        }\n\n\n        // ---- normalization\n        static libNormalization(data: number[][], type: string) {\n            var numLinks = data.length; // # rows\n            var dimension = data[0].length; // # cols\n\n            // input matrix data \\in R^{#samples x dimension}\n            // normalized per each feature over all samples\n            data = numeric.transpose(data);\n            for (var j = 0; j < dimension; j++) {\n                var aVector = data[j];\n\n                if (type == \"minmax\") {\n                    var minmax = this.computeMinMaxOfVector(aVector);\n\n                    var normalizedVec = [];\n                    for (var i = 0; i < numLinks; i++) {\n                        normalizedVec[i] = (aVector[i] - minmax.min) / minmax.range;\n                    }\n                }\n                else if (type == \"z-score\") {\n                    var mean = this.computeVectorMean(aVector);\n                    var std = this.computeStd(aVector, mean);\n\n                    var normalizedVec = [];\n                    for (var m = 0; m < numLinks; m++) {\n                        normalizedVec[m] = (aVector[m] - mean) / std;\n                    }\n                }\n                data[j] = [];\n                data[j] = normalizedVec;\n            }\n\n            return numeric.transpose(data);\n        }\n\n\n        // ---- libraries for distance/similarity\n        static libDistMahalanobis(covMat: number[][], refCorr: number[], targetCorr: number[]) {\n            // compute mahalanobis distance between two vectors\n            covMat = numeric.inv(covMat);\n\n            // a = (X-mu)' * Cov^-1 * (X-mu)\n            var subVec = [];\n            subVec[0] = [];\n            for (var i = 0; i < refCorr.length; i++) {\n                subVec[0][i] = refCorr[i] - targetCorr[i];\n            }\n            var subVecTranspose = this.libTranspose(subVec);\n\n            var leftSide = numeric.dot(subVec, covMat);\n            var dist = numeric.dot(leftSide, subVecTranspose);\n\n            var sqrt = d3.scale.sqrt();\n            return sqrt(dist);\n        }\n\n\n        static libDistManhattan(refCorr: number[], targetCorr: number[]) {\n            // compute manhattan distance between two vectors\n            var dist = 0;\n            for (var i = 0; i < refCorr.length; i++) {\n                dist = dist + Math.abs(refCorr[i] - targetCorr[i])\n            }\n            return dist;\n        }\n\n        static libDistEuc(refCorr: number[], targetCorr: number[]) {\n            // compute Euclidean distance between two vectors\n            var sum = 0;\n            for (var i = 0; i < refCorr.length; i++) {\n                var diff = (refCorr[i] - targetCorr[i]);\n                sum = sum + (diff * diff);\n            }\n\n            var dist = Math.sqrt(sum);\n            return dist;\n        }\n\n        static libDistEucFusion(refCorr: any, targetCorr: any, featureSpecs: string[]) {\n            var eucSum = 0;\n            var startEndPointSum = 0;\n            var pairwiseSum = 0;\n            // iterate over all features\n            for (var i = 0; i < refCorr.length; i++) {\n                var ref = refCorr[i];\n                var target = targetCorr[i];\n                var featureName = featureSpecs[i];\n\n                // a pairwise feature, penalty for dissimilar starting and ending point\n                if (featureName == \"endPoint\") {\n                    if (refCorr[i] != targetCorr[i]) {\n                        startEndPointSum = startEndPointSum + 1;\n                    }\n                }\n                else if (featureName == \"startPoint\") {\n                    if (refCorr[i] != targetCorr[i]) {\n                        startEndPointSum = startEndPointSum + 1;\n                    }\n                }\n                else if (featureName == \"rawData\") {\n                    pairwiseSum = pairwiseSum + this.computePairwiseFeatures(refCorr[i], targetCorr[i]);\n                    continue;\n                }\n                // comparison (e.g. euclidean distance) of signal features between two links\n                else {\n                    var diff = refCorr[i] - targetCorr[i];\n                    eucSum = eucSum + (diff * diff);\n                }\n            }\n\n            // fusion using SUM rule\n            var dist = Math.sqrt(eucSum) + pairwiseSum + startEndPointSum;\n\n            if (numeric.isNaN(dist) == true)\n                dist = 0;\n\n            return dist;\n        }\n\n        static libDistMultiDimEuc(refCorr: any, targetCorr: any, featureSpecs: string[]) {\n            var sum = 0;\n            for (var i = 0; i < refCorr.length; i++) {\n                var ref = refCorr[i];\n                var target = targetCorr[i];\n                var featureName = featureSpecs[i];\n                var diff = 0;\n\n                if ((featureName == \"endPoint\") || (featureName == \"startPoint\")) {\n                    // a pairwise feature, penalty for dissimilar starting and ending point\n                    if (refCorr[i] == targetCorr[i]) {\n                        diff = 0;\n                    }\n                    else {\n                        diff = 1 + Math.abs(refCorr[i] - targetCorr[i]); // panelty\n                    }\n                }\n                else if (featureName == \"rawData\") {\n                    sum = sum + this.computePairwiseFeatures(refCorr[i], targetCorr[i]);\n                    continue;\n                }\n                else {\n                    diff = refCorr[i] - targetCorr[i];\n                }\n                sum = sum + (diff * diff);\n            }\n\n            var dist = Math.sqrt(sum);\n            if (numeric.isNaN(dist) == true)\n                dist = 0;\n\n            return dist;\n        }\n\n\n\n        static libDistHamming(refCorrSeg: number[], targetCorrSeg: number[]) {\n            // compute hamming distance between two discrete vectors\n            var hammingDist = 0;\n            for (var j = 0; j < refCorrSeg.length; j++) {\n                if (refCorrSeg[j] == targetCorrSeg[j]) {\n                    hammingDist++;\n                }\n            }\n            return hammingDist / refCorrSeg.length;\n        }\n\n        static libDistCosine(refCorr: number[], targetCorr: number[]) {\n            // compute cosine distance between two vectors\n            var sqrt = d3.scale.sqrt();\n\n            var sumRef = 0, sumTarget = 0, sumMul = 0;\n            for (var i = 0; i < refCorr.length; i++) {\n                sumRef = sumRef + (refCorr[i] * refCorr[i]);\n                sumTarget = sumTarget + (targetCorr[i] * targetCorr[i]);\n                sumMul = sumMul + (refCorr[i] * targetCorr[i]);\n            }\n\n            return 1 - (sumMul / (sqrt(sumRef) * sqrt(sumTarget)));\n        }\n\n\n        static libDistCorrelation(refCorr: number[], targetCorr: number[]) {\n            // compute correlation distance between two vectors\n            var sqrt = d3.scale.sqrt();\n            var length = refCorr.length;\n\n            var refMean = d3.sum(refCorr) / length;\n            var targetMean = d3.sum(targetCorr) / length;\n\n            var sumRef = 0, sumTarget = 0, sumMul = 0;\n            for (var i = 0; i < refCorr.length; i++) {\n                sumRef = sumRef + ((refCorr[i] - refMean) * (refCorr[i] - refMean));\n                sumTarget = sumTarget + ((targetCorr[i] - targetMean) * (targetCorr[i] - targetMean));\n                sumMul = sumMul + ((refCorr[i] - refMean) * (targetCorr[i] - targetMean));\n            }\n            return 1 - (sumMul / (sqrt(sumRef) * sqrt(sumTarget)));\n\n            return 10;\n        }\n\n        static libDistProcrustes(refCorrSeg: number[], targetCorrSeg: number[]) {\n            // compute Procrustes distance between two vectors, not completed yet\n            var ref = [], target = [];\n            // generate 2 dimensional data\n            var idxVec = [];\n            for (var i = 0; i < refCorrSeg.length; i++) {\n                ref[i] = [i, refCorrSeg[i]];\n                target[i] = [i, targetCorrSeg[i]];\n            }\n\n            var transposedRef = numeric.transpose(ref);\n            var mul = numeric.dot(ref, target);\n\n            var I = numeric.identity(refCorrSeg.length);\n            var diffMat = this.libMatPlusMinus(I, mul, 'minus');\n            var traceDiff = this.libTrace(diffMat);\n        }\n\n        static libNumSimilarity(refCorr: number[], targetCorr: number[]) {\n            // compute number similairty between two vectors\n            var sum = 0;\n            for (var i = 0; i < refCorr.length; i++) {\n                var numSim = 1 - (Math.abs(refCorr[i] - targetCorr[i]) / (Math.abs(refCorr[i]) + Math.abs(targetCorr[i])));\n\n                sum = sum + (numSim * numSim);\n            }\n            sum = sum / refCorr.length;\n\n            var sqrt = d3.scale.sqrt();\n            return sqrt(sum);\n        }\n\n        static DTW_main(refCorrSeg: number[], targetCorrSeg: number[]) {\n            // compute DTW distance between two vectors\n            var weights = [];\n            weights.push({ hor: 1, ver: 1, diag: 1 });\n\n            var ref = [], target = [];\n            // generate 2 dimensional data\n            for (var i = 0; i < refCorrSeg.length; i++) {\n                ref[i] = [refCorrSeg[i]];\n                target[i] = [targetCorrSeg[i]];\n            }\n\n            var pathMap = this.DTW_computePathMap(ref, target, weights);\n            return 1 - pathMap[refCorrSeg.length - 1][targetCorrSeg.length - 1].min;\n        }\n\n        static DTW_computePathMap(refCorrSeg2D: number[][], targetCorrSeg2D: number[][], weights) {\n            // sub-function of DTW function. computing path map\n            var pathMap = [];\n\n            for (var i = 0; i < refCorrSeg2D.length; i++) {\n                pathMap[i] = [];\n\n                for (var j = 0; j < targetCorrSeg2D.length; j++) {\n                    pathMap[i][j] = [];\n\n                    var dist = this.libDistEuc(refCorrSeg2D[i], targetCorrSeg2D[j]);\n                    var hor = null, ver = null, diag = null, path = null, min = null;\n                    if (i == 0 && j == 0) {\n                        min = dist;\n                    }\n                    else if (i > 0 && j == 0) {\n                        min = (dist * weights[0].hor) + pathMap[i - 1][j].min;\n                        path = 1;\n                    }\n                    else if (i == 0 && j != 0) {\n                        min = (dist * weights[0].ver) + pathMap[i][j - 1].min;\n                        path = 3;\n                    }\n                    else {\n                        hor = (dist * weights[0].hor) + pathMap[i - 1][j].min;\n                        ver = (dist * weights[0].ver) + pathMap[i][j - 1].min;\n                        diag = (dist * weights[0].diag) + pathMap[i - 1][j - 1].min;\n\n                        min = d3.min([hor, ver, diag]);\n                        for (var k = 0; k < 3; k++) {\n                            if (min == hor) path = 1;\n                            else if (min == diag) path = 2;\n                            else if (min == ver) path = 3;\n                        }\n                    }\n\n                    pathMap[i][j] = ({ hor: hor, ver: ver, diag: diag, path: path, min: dist });\n                }\n            }\n            return pathMap;\n        }\n\n\n        // --- linear algebra operations\n        static mat2vec(corrMat: number[][], xCoordinates: number[], yCoordinates: number[]) {\n            // convert a matrix into a vector\n            var x1 = xCoordinates[0];\n            var x2 = xCoordinates[1];\n            var y1 = yCoordinates[0];\n            var y2 = yCoordinates[1];\n\n            var convertedVec = [];\n            var count = 0;\n            for (var r = y1; r <= y2; r++) {\n                for (var c = x1; c <= x2; c++) {\n                    convertedVec[count] = corrMat[r][c];\n                    count++;\n                }\n            }\n            return convertedVec;\n        }\n\n        static computeMinMaxOfVector(vector: number[]) {\n            // find out the min and max values of an input vector\n            // input vector should be a colum vector\n            var length = vector.length; // vector length, # rows\n            var min = 1000000;\n            var max = -1000000;\n\n            for (var i = 0; i < length; i++) {\n                if (vector[i] > max) {\n                    max = vector[i];\n                } else if (vector[i] < min) {\n                    min = vector[i];\n                }\n            }\n            var range = max - min;\n\n            return { min: min, max: max, range: range };\n        }\n\n        static computeVectorMean(vector: number[]) {\n            // compute a mean of a vector\n            // input vector should be a colum vector\n            var length = vector.length;\n            var mean = 0;\n\n            for (var i = 0; i < length; i++) {\n                mean = mean + vector[i];\n            }\n\n            return (mean / length);\n        }\n\n        static computeCovarianceMat(data: number[][]) {\n            // compute covariance matrix of input data\n            var numLinks = data.length;\n            var dataTranspose = numeric.transpose(data);\n            var dimension = dataTranspose.length;\n\n            // compute sample mean\n            var meanVec = [];\n            for (var n = 0; n < dimension; n++) {\n                var tempVec = dataTranspose[n];\n                meanVec[n] = numeric.sum(tempVec) / numLinks;\n            }\n\n            var subMat = [];\n            for (var i = 0; i < numLinks; i++) {\n                subMat[i] = this.libVecPlusMinus(data[i], meanVec, 'minus');\n            }\n\n            var subMatTranspose = numeric.transpose(subMat);\n            var covMat = numeric.dot(subMatTranspose, subMat);\n\n            return covMat;\n        }\n\n        static computeStd(corrSeg: number[], mean: number) {\n            // compute standard deviation\n            var sum = 0;\n            var sqrt = d3.scale.sqrt();\n            for (var i = 0; i < corrSeg.length; i++) {\n                var diff = corrSeg[i] - mean;\n\n                sum = sum + (diff * diff);\n            }\n            var temp = sum / corrSeg.length;\n            return sqrt(temp);\n        }\n\n        static libTrace(Mat: number[][]) {\n            // compute trace of a square matrix\n            var row = Mat.length;\n\n            var sum = 0;\n            for (var r = 0; r < row; r++) {\n                sum = sum + Mat[r][r];\n            }\n\n            return sum;\n        }\n\n        static libInnerProduct(Mat1: number[][], Mat2: number[][]) {\n            // perform inner product between two matrices\n            // Numeric library has a similar function\n            var row1 = Mat1.length;\n            var row2 = Mat2.length;\n            var col1 = Mat1[0].length;\n            var col2 = Mat2[0].length;\n            if (col1 != row1) {\n                console.log(\"matrix dimension is not matched for innter product computation\");\n            }\n            var Mat1xMat2 = [];\n            for (var r = 0; r < row1; r++) {\n                var vecMul = [];\n                for (var c = 0; c < col2; c++) {\n                    var sum = 0;\n                    for (var rc = 0; rc < col1; rc++) {\n                        sum = sum + (Mat1[r][rc] * Mat2[rc][c]);\n                    }\n                    vecMul[c] = sum;\n                }\n                Mat1xMat2[r] = vecMul;\n            }\n\n            return Mat1xMat2;\n        }\n\n        static libTranspose(Mat: number[][]) {\n            // transpose a matrix\n            var oldRow = Mat.length;\n            var oldCol = Mat[0].length;\n\n            var rotatedMat = [];\n            for (var r = 0; r < oldCol; r++) {\n                rotatedMat[r] = [];\n            }\n\n            for (var newRow = 0; newRow < oldCol; newRow++) {\n                for (var newCol = 0; newCol < oldRow; newCol++) {\n                    rotatedMat[newRow][newCol] = Mat[newCol][newRow];\n                }\n            }\n            return rotatedMat;\n        }\n\n\n        static libVecPlusMinus(vec1: number[], vec2: number[], type: string) {\n            // perform addition or subtraction between two vectors\n            var length = vec1.length;\n            var result = [];\n\n            for (var i = 0; i < length; i++) {\n                if (type == \"plus\") {\n                    result[i] = vec1[i] + vec2[i];\n                }\n                else {\n                    result[i] = vec1[i] - vec2[i];\n                }\n            }\n            return result;\n        }\n\n\n        static libMatPlusMinus(mat1: number[][], mat2: number[][], type: string) {\n            // perform addition or subtraction between two matrices\n            var row = mat1.length;\n            var col = mat1[0].length;\n            var resultMat = [];\n            for (var r = 0; r < row; r++) {\n                resultMat[r] = [];\n                for (var c = 0; c < col; c++) {\n                    if (type == \"plus\") {\n                        resultMat[r][c] = mat1[r][c] + mat2[r][c];\n                    } else if (type == \"minus\") {\n                        resultMat[r][c] = mat1[r][c] - mat2[r][c];\n                    }\n                }\n            }\n            return resultMat;\n        }\n    }\n","///-----------------------------------------------------------------------------------------------------------------\n/// clustering.ts.  Copyright (c) 2014 Microsoft Corporation.\n///     - clustering related code for LinkWave.\n///-----------------------------------------------------------------------------------------------------------------\n/// <reference path=\"features.ts\"/>\n\ndeclare var numeric: any;\n\n    class Clustering {\n        // K-means clustering\n        static Kmeans(data: number[][], clusterNum: number, numIteration: number) {\n            var clusters = [];\n            var clusterPerLink = []; // # links\n            var linksPerCluster = []; // # clusters\n\n            // iterate until clusters become stable (i.e. there is no sample changing clusters) or reach the prefixed max iteration number\n            for (var nIter = 0; nIter < numIteration; nIter++) {\n\n                // update clusters\n                for (var i = 0; i < clusterNum; i++) {\n                    if (nIter == 0) {\n                        // initialize the clusters\n                        clusters[i] = data[i];\n                    } else {\n                        clusters[i] = Clustering.Kmeans_computeMean(data, linksPerCluster[i])\n                    }\n                    linksPerCluster[i] = [];\n                }\n\n                // iterate for all links\n                var numClusterChanges = 0;\n                for (var j = 0; j < data.length; j++) {\n                    var minSimilarity = 1000000;\n                    var closestCluster = null;\n\n                    if (nIter == 0)\n                        clusterPerLink[j] = clusterNum + 1; // initialize\n\n                    // iterate for all clusters (i.e. one link vs. all clusters)\n                    for (var cIter = 0; cIter < clusterNum; cIter++) {\n                        var similarity = Features.libDistEuc(data[j], clusters[cIter]);\n                        if (minSimilarity > similarity) {\n                            closestCluster = cIter;\n                            minSimilarity = similarity;\n                        }\n                    }\n\n                    // count the cluster changings\n                    if (clusterPerLink[j] != closestCluster)\n                        numClusterChanges = numClusterChanges + 1;\n\n                    clusterPerLink[j] = closestCluster; // # links\n                    var numSamples = linksPerCluster[closestCluster].length;\n                    linksPerCluster[closestCluster][numSamples] = j;\n                }\n\n                if (numClusterChanges == 0)\n                    break;\n            }\n            return linksPerCluster;\n        }\n\n        static Kmeans_computeMean(data: any, sampleIdx: number[]) {\n            // compute and return a new cluster center\n            var clusterMeans = [];\n\n            // compute mean for each class\n            var numSamples = sampleIdx.length;\n\n            var accumulatedData = [];\n            for (var i = 0; i < numSamples; i++) {\n                var idx = sampleIdx[i];\n                if (i == 0) {\n                    accumulatedData = data[idx];\n                }\n                else {\n                    accumulatedData = Features.libVecPlusMinus(accumulatedData, data[idx], \"plus\");\n                }\n            }\n\n            // take mean\n            for (var j = 0; j < accumulatedData.length; j++) {\n                if (accumulatedData[j] != 0)\n                    accumulatedData[j] = accumulatedData[j] / numSamples;\n            }\n            return accumulatedData;\n        }\n\n        static ascendSort(a, b) {\n            return a.value - b.value;\n        }\n\n        // spectral clustering\n        static SC_main(data: any, clusterNum: number, kNN: number, SCtype: string) {\n            console.log(\"spectral clustering\");\n\n            // construct an affinity matrix, kNN connected SC'[''\n            var A = []; // affinity matrix\n            var D = []; // diagonal matrix\n            for (var i = 0; i < data.length; i++) {\n                var refCorr = data[i];\n                var dist = [];\n                A[i] = [];\n                D[i] = [];\n\n                for (var j = 0; j < data.length; j++) {\n                    var targetCorr = data[j];\n                    var distVal = Features.libDistEuc(refCorr, targetCorr);\n                    dist.push({ id: j, value: distVal });\n                    A[i][j] = 0;\n                    D[i][j] = 0;\n                }\n\n                dist = dist.sort(this.ascendSort);\n                for (var p = 0; p < kNN; p++) {\n                    if (SCtype == \"real\") {\n                        A[i][dist[p].id] = dist[p].value;\n                    } else if (SCtype == \"binary\") {\n                        A[i][dist[p].id] = 1;\n                    }\n                }\n            }\n\n            // compute the laplacian matrix\n            // L_norm = D^(-1/2)*(D-A)*D^(-1/2)\n            for (var m = 0; m < data.length; m++) {\n                var sum = 0;\n                for (var n = 0; n < data.length; n++) {\n                    sum = sum + A[m][n];\n                }\n                D[m][m] = Math.pow(sum, (-1 / 2));\n            }\n\n            var DminusA = Features.libMatPlusMinus(D, A, \"minus\");\n            var DDminusA = numeric.dot(D, DminusA);\n            var L_norm = numeric.dot(DDminusA, D);\n\n\n            // compute eigen vectors\n            var eigenVecVal = numeric.eig(L_norm); // eigenvectors are sorted in descending order of eigenvalues\n            var eigenVals = [];\n            for (var q = 0; q < L_norm.length; q++) {\n                eigenVals.push({ id: q, value: eigenVecVal.lambda.x[q]});\n            }\n            eigenVals = eigenVals.sort(this.ascendSort);\n\n            // compute normalized U matrix\n            var U = [];\n            for (var n = 1; n < clusterNum + 1; n++) {\n                var eigVecTemp = eigenVecVal.E.x[eigenVals[n].id];\n                var normVal = numeric.norm2(eigVecTemp);\n                for (var kk = 0; kk < eigVecTemp.length; kk++) {\n                    eigVecTemp[kk] = eigVecTemp[kk] / normVal;\n                }\n                U[n - 1] = eigVecTemp;\n            }\n\n            return numeric.transpose(U);\n        }\n\n        // compute silhouette coefficient to determin the optimal number of clusters\n        static silhouetteMeasure(data: number[][], linksPerCluster: number[][]) {\n            var clusterNum = linksPerCluster.length;\n\n            var coefficient = 0;\n            var totalCount = 0;\n            // loop for each clusters\n            for (var i = 0; i < clusterNum; i++) {\n                var samPerCluster = linksPerCluster[i];\n                var samNum = samPerCluster.length;\n                totalCount = totalCount + samNum;\n\n                // loop for each samples per cluster\n                for (var j = 0; j < samNum; j++) {\n                    var samIdx1 = samPerCluster[j];\n\n                    // compute the average a(i), within cluster\n                    var withinCluster = 0;\n                    for (var k = 0; k < samNum; k++) { // loop for each comparison within a cluster\n                        var samIdx2 = samPerCluster[k];\n\n                        withinCluster = withinCluster + Features.libDistEuc(data[samIdx1], data[samIdx2]);\n                    }\n                    withinCluster = withinCluster / samNum;\n\n                    // compute the average b(i), between clusters\n                    var betweenClusters = [];\n                    for (var c = 0; c < clusterNum; c++) {\n                        if (c == i) {\n                            betweenClusters[c] = 1000;\n                            continue; // skip the identical cluster\n                        }\n\n                        var samPerClusterSub = linksPerCluster[c];\n                        var samNumSub = samPerClusterSub.length;\n                        var betweenCluster = 0;\n                        for (var d = 0; d < samNumSub; d++) {\n                            var samIdx3 = samPerClusterSub[d];\n                            betweenCluster = betweenCluster + Features.libDistEuc(data[samIdx1], data[samIdx3]);\n                        }\n                        betweenClusters[c] = betweenCluster / samNumSub;\n                    }\n\n                    // find the min val\n                    var minBtwCluster = 100;\n                    for (var m = 0; m < betweenClusters.length; m++) {\n                        if (minBtwCluster > betweenClusters[m]) {\n                            minBtwCluster = betweenClusters[m];\n                        }\n                    }\n\n                    // compute silhouette coefficient\n                    if (withinCluster > minBtwCluster) {\n                        coefficient = coefficient + ((minBtwCluster / withinCluster) - 1);\n                    } else if (withinCluster < minBtwCluster) {\n                        coefficient = coefficient + (1 - (withinCluster / minBtwCluster));\n                    }\n                }\n            }\n            coefficient = coefficient / totalCount;\n\n            return coefficient;\n        }\n    }\n","///-----------------------------------------------------------------------------------------------------------------\n/// sorting.ts.  Copyright (c) 2014 Microsoft Corporation.\n///     - sorting related code for LinkWave.\n///-----------------------------------------------------------------------------------------------------------------\n/// <reference path=\"features.ts\"/>\n/// <reference path=\"clustering.ts\"/>\ndeclare var numeric: any;\n\n    class Sorting {\n\n        // ordering by similarity to a reference link\n        // data [index] = [weight t, weight t+1, weight t+n]\n        static sortBySimilarity(data: number[][], referenceIndex: number, metric: string) {\n\n            if (metric ==null)\n              metric=\"euclideanFusion\";\n\n            // feature extraction\n            var features = [];\n            var featureSpecs = [];\n\n            for(var i=0; i<data.length; i++ ) {\n                var featureTemp = Features.computeArithemeticFeatures(data[i]);\n                features[i] = featureTemp.featureVec;\n                if (i==referenceIndex) {\n                    featureSpecs = featureTemp.featureSpecs;\n                }\n            }\n\n            // normalization into [0, 1]\n            features = Features.libNormalization(features, \"minmax\"); // \"minmax\" or \"z-score\"\n\n            // appending raw data as a feature\n            // do it after normalization of other features\n            if (metric == \"euclideanMulti\" || metric == \"euclideanFusion\") {\n                var lastIdx = features[0].length;\n                for (var i = 0; i < data.length; i++) {\n                    features[i][lastIdx] = data[i];\n                }\n                featureSpecs[lastIdx] = \"rawData\";\n            }\n            // we could do weighting on the features\n            // will be like (\\alpha x feature 1) + (\\beta x feature 2) + ...\n\n            // matching\n            var min = 10000;\n            var max = -10000;\n            var score = 0;\n            var scores = [];\n            var covMat: number[][]; // cov matrix for mahalanobis distance measure\n            for (var k = 0; k < features.length; k++) {\n                if (metric == \"manhattan\") {\n                    score = Features.libDistManhattan(features[referenceIndex], features[k]);\n                }\n                else if (metric == \"euclidean\") {\n                    score = Features.libDistEuc(features[referenceIndex], features[k]);\n                }\n                else if (metric == \"euclideanMulti\") {\n                    // euclidean distance based\n                    // it may not satisfy inequality property of distance\n                    // disabled\n                    score = Features.libDistMultiDimEuc(features[referenceIndex], features[k], featureSpecs);\n                }\n                else if (metric == \"euclideanFusion\") {\n                    // scores fusion using simple SUM rule\n                    // euclidean distanced based\n                    score = Features.libDistEucFusion(features[referenceIndex], features[k], featureSpecs);\n                }\n                else if (metric == \"cosine\") {\n                    score = Features.libDistCosine(features[referenceIndex], features[k]);\n                }\n                else if (metric == \"mahalanobis\") {\n                    if (k == 0) {\n                        covMat = Features.computeCovarianceMat(features);\n                    }\n                    score = Features.libDistMahalanobis(covMat, features[referenceIndex], features[k]);\n                }\n                else if (metric == \"DTW\") {\n                    // not appropriate for our project. disabled.\n                    score = Features.DTW_main(features[referenceIndex], features[k]);\n                }\n                else if (metric == \"pearson\") {\n                    // not appropriate for our project. disabled.\n                    score = Features.calcPearsonsCorrelation(features[referenceIndex], features[k]);\n                }\n                else if (metric == \"correlation\") {\n                    score = Features.libDistCorrelation(features[referenceIndex], features[k]);\n                }\n\n                if (score > max) {\n                    max = score;\n                }\n                if (score < min) {\n                    min = score;\n                }\n                scores[k] = score;\n            }\n            var range = max - min;\n            // score normalization for visualization\n            //var scoreref = 1- ((scores[referenceIndex] - min) / range);\n            //this.debug(\"score of reference \" + scoreref);\n\n            var similarity = [];\n            for(var i=0; i<data.length; i++) {\n                similarity[i]=  1 - ((scores[i] - min) / range);\n            }\n            \n            return similarity;\n        }\n    }\n","/// <reference path=\"../../core/networkcube.d.ts\" />\n/// <reference path=\"features.ts\" />\n/// <reference path=\"clustering.ts\" />\n/// <reference path=\"sorting.ts\" />\n/// <reference path=\"../widgets/widgets.d.ts\" />\n/// <reference path=\"../utils/animations.d.ts\" />\n\n\n\n\nvar COLOR_DEFAULT = new THREE.Color(0x000000);\nvar COLOR_HIGHLIGHT = new THREE.Color(0xff8800);\n\nvar OPACITY_DIM: number = .5;\n\nvar DURATION: number = 500;\n\nvar FONT_SIZE_NODE_LABEL: number = 11;\n\n\n\nclass NBounds {\n    x: number;\n    y: number;\n    constructor(v1: number, v2?: number) {\n        this.x = v1;\n        if (v2 == undefined)\n            this.y = v1;\n        else\n            this.y = v2;\n    }\n}\n\nvar width: number;\nvar height: number;\nvar urlVars = networkcube.getUrlVars();\nif (urlVars['width'])\n    this.width = parseInt(urlVars['width']);\nelse\n    this.width = window.innerWidth - 30;\nif (urlVars['height'])\n    this.height = parseInt(urlVars['height']);\nelse\n    this.height = window.innerHeight - 100;\n\nconsole.log('>>>', width);\n\nvar plotMargin: NBounds = new NBounds(80, 0)\nvar plotWidth: number = this.width - plotMargin.x * 2;\nvar plotHeight: number;\n\n\n// VISUAL STATES\nvar HIGHT_ROW_DEFAULT: number = 20;\nvar rowHeight: number = HIGHT_ROW_DEFAULT;\nvar rowSpacing: number = 0;\n\n// GET DATA\nvar dgraph: networkcube.DynamicGraph = networkcube.getDynamicGraph();\n\n// times shown/selected in other visualizations\nvar startTime: networkcube.Time = dgraph.startTime;\nvar endTime: networkcube.Time = dgraph.endTime;\n\n// times visible at this visualization\nvar startTimeZoom: networkcube.Time = dgraph.startTime;\nvar endTimeZoom: networkcube.Time = dgraph.endTime;\n\nplotHeight = rowHeight * dgraph.links().length;\nheight = plotHeight;\n\n\nnetworkcube.setDefaultEventListener(updateEvent);\nnetworkcube.addEventListener('timeRange', timeRangeHandler);\n\n\n\n$('#dataName').text(dgraph.name);\n\n// SVG STUFF\n// Timeline\nvar timeSvg = d3.select('#timelineDiv')\n    .append('svg')\n    .attr('width', width)\n    .attr('height', 50)\n\nvar timeSlider: TimeSlider = new TimeSlider(dgraph, plotWidth + 45);\ntimeSlider.appendTo(timeSvg, plotMargin.x - 10, 0);\n\ntimeSvg.append('text')\n    .text('Time Range:')\n    .attr('x', 0)\n    .attr('y', 35)\n    .style('font-family', 'Helvetica')\n    .style('opacity', 0.5)\n    .style('font-size', '10pt')\n\n\nvar timeSvg2 = d3.select('#timelineDiv')\n    .append('svg')\n    .attr('width', width)\n    .attr('height', 50)\n\nvar timeZoomSlider: TimeSlider = new TimeSlider(dgraph, plotWidth + 45, timezoomCallback);\ntimeZoomSlider.appendTo(timeSvg2, plotMargin.x - 10, 0);\n\ntimeSvg2.append('text')\n    .text('Time Zoom:')\n    .attr('x', 0)\n    .attr('y', 35)\n    .style('font-family', 'Helvetica')\n    .style('opacity', 0.5)\n    .style('font-size', '10pt')\n\n\n\nvar linkWeightScale = d3.scale.linear().range([0, (rowHeight - rowSpacing) / 2]);\n\nvar svg = d3.select('#visSvg')\n    .attr('width', width)\n    .attr('height', height)\n\n// order is the reordered array of links ids\n// rank gives the position of a link given its id\nvar order = [];\nvar rank = [];\n// default order of links by id\nfor (var i = 0; i < dgraph.links().length; i++) {\n    order[i] = { id: i, value: i };\n    rank[i] = i;\n}\n\nvar visibleRank: number[];\n\n\n\nsortBySimilarity(4);\n\n\n\n\n// Draw labels\nvar rows = svg.selectAll('.row')\n    .data(dgraph.links().toArray())\n    .enter()\n    .append('g')\n    .attr('class', 'row')\n    .attr('transform', (d, i) => {\n        return 'translate(0, ' + (plotMargin.y + rowHeight * (visibleRank[i] + .6)) + ')';\n    });\n\nrows.append('text')\n    .datum(function (d) { return d.source; })\n    .attr('class', 'labelsLeft nodeLabel')\n    .attr('text-anchor', 'end')\n    .text((d, i) => { return d.label(); })\n    .attr('x', plotMargin.x - 10)\n    .on('mouseover', (d, i) => {\n        networkcube.highlight('set', <networkcube.ElementCompound>{ nodes: [d] });\n    })\n    .on('mouseout', (d, i) => {\n        networkcube.highlight('reset');\n    })\n    .on('click', (d, i) => {\n        if (!d.isSelected()) {\n            // if this element has not been selected yet,\n            // add it to current selection.\n            networkcube.selection('add', <networkcube.ElementCompound>{ nodes: [d] });\n        } else {\n            var selections = d.getSelections();\n            var currentSelection = this.dgraph.getCurrentSelection();\n            for (var j = 0; j < selections.length; j++) {\n                if (selections[j] == currentSelection) {\n                    networkcube.selection('remove', <networkcube.ElementCompound>{ nodes: [d] });\n                    return;\n                }\n            }\n            // current selection has not been found among already\n            // assigned selections, hence add this selection\n            networkcube.selection('add', <networkcube.ElementCompound>{ nodes: [d] });\n        }\n    })\n    .style('font-size', FONT_SIZE_NODE_LABEL);\n\nrows.append('text')\n    .datum(function (d) { return d.target; })\n    .attr('class', 'labelsRight nodeLabel')\n    .attr('text-anchor', 'start')\n    .text((d, i) => { return d.label(); })\n    .attr('x', plotMargin.x + plotWidth + 10)\n    .on('mouseover', (d, i) => {\n        networkcube.highlight('set', <networkcube.ElementCompound>{ nodes: [d] });\n    })\n    .on('mouseout', (d, i) => {\n        networkcube.highlight('reset');\n    })\n    .on('click', (d, i) => {\n        var selections = d.getSelections();\n        var currentSelection = this.dgraph.getCurrentSelection();\n        for (var j = 0; j < selections.length; j++) {\n            if (selections[j] == currentSelection) {\n                networkcube.selection('remove', <networkcube.ElementCompound>{ nodes: [d] });\n                return;\n            }\n        }\n        networkcube.selection('add', <networkcube.ElementCompound>{ nodes: [d] });\n    })\n    .style('font-size', FONT_SIZE_NODE_LABEL);\n\n\n// WEB GL\n\nvar scene: THREE.Scene;\nvar camera: THREE.OrthographicCamera;\nvar renderer: THREE.WebGLRenderer;\nvar geometry: THREE.BufferGeometry;\nvar mesh: THREE.Mesh;\n\n// SHADERS`\nvar attributes = {\n    customColor: { type: 'c', value: [] }\n}\nvar shaderMaterial = new THREE.ShaderMaterial({\n    attributes: attributes,\n    vertexShader: document.getElementById('vertexshader').textContent,\n    fragmentShader: document.getElementById('fragmentshader').textContent,\n    blending: THREE.NormalBlending,\n    depthTest: true,\n    transparent: true,\n    side: THREE.DoubleSide,\n    linewidth: 2\n});\n\n// scene\nvar scene = new THREE.Scene();\n\n// camera\nvar camera = new THREE.OrthographicCamera(\n    plotWidth / -2,\n    plotWidth / 2,\n    plotHeight / 2,\n    plotHeight / -2,\n    0, 11);\n\nscene.add(camera);\ncamera.position.x = plotWidth / 2;\ncamera.position.y = -plotHeight / 2;\ncamera.position.z = 10;\n\n// renderer\nrenderer = new THREE.WebGLRenderer({ antialias: true })\nrenderer.setSize(plotWidth, plotHeight)\nrenderer.setClearColor(0xffffff, 1);\n\n// position canvas element containing cells\nvar canvas: HTMLCanvasElement = renderer.domElement;\ncanvas.width = plotWidth;\ncanvas.height = plotHeight;\n\n\n// set canvas listeners\ncanvas.addEventListener('mousemove', (e) => { this.mouseMove(e); })\ncanvas.addEventListener('click', click);\n\n$('#visCanvasFO').append(canvas);\nd3.select('#visCanvasFO')\n    .attr('x', plotMargin.x)\n    .attr('y', plotMargin.y)\n    .attr('width', plotWidth)\n    .attr('height', plotHeight)\n\n\n// geometry and mesh\n// var geometry:THREE.Geometry = new THREE.Geometry();\n\nvar vertexColors: number[][] = [];\nvar material = new THREE.LineBasicMaterial({ color: 0x000000 });\nclass WaveShape {\n    positive;\n    negative;\n}\nvar waveShapes: WaveShape[] = [];\nvar stepWidth: number;\nvar stretchFactorX = 1;\nvar stretchFactorY = 1;\n\nvar waveHighlightFrames: THREE.Mesh[] = []\nvar waveSelectionFrames: THREE.Mesh[] = []\n\n\n// CREATE DIM LAYER RECTANGLES\nvar rectLength = plotWidth;\nvar dimLayerLeft = new THREE.Shape();\ndimLayerLeft.moveTo(0, 0);\ndimLayerLeft.lineTo(0, -plotHeight);\ndimLayerLeft.lineTo(-rectLength, -plotHeight);\ndimLayerLeft.lineTo(-rectLength, 0);\n// dimLayerLeft.lineTo( 0, 0, 1);\ndimLayerLeft.lineTo(0, 0);\n\nvar rectGeomLeft = new THREE.ShapeGeometry(dimLayerLeft);\nvar rectMeshLeft = new THREE.Mesh(rectGeomLeft, new THREE.MeshBasicMaterial({ color: 0xffffff, transparent: true }));\nrectMeshLeft.position.set(0, 0, 1)\nrectMeshLeft.material.opacity = OPACITY_DIM;\nscene.add(rectMeshLeft);\n\nvar dimLayerRight = new THREE.Shape();\ndimLayerRight.moveTo(0, 0);\ndimLayerRight.lineTo(0, -plotHeight);\ndimLayerRight.lineTo(rectLength, -plotHeight);\ndimLayerRight.lineTo(rectLength, 0);\n// dimLayerRight.lineTo( 0, 0, 1);\ndimLayerRight.lineTo(0, 0);\n\nvar rectGeomRight = new THREE.ShapeGeometry(dimLayerRight);\nvar rectMeshRight = new THREE.Mesh(rectGeomRight, new THREE.MeshBasicMaterial({ color: 0xffffff, transparent: true }));\nrectMeshRight.position.set(plotWidth, 0, 1)\nrectMeshRight.material.opacity = OPACITY_DIM;\nscene.add(rectMeshRight);\n\nupdate();\n\nfunction update() {\n\n    updateLinkGeometry();\n    updateLinks();\n    updateNodes();\n    render();\n}\n\nfunction updateLinkGeometry() {\n\n    // var curve:THREE.Curve;\n    // var path:THREE.Path;\n    var splineObject: THREE.Line;\n    var pointsPositiveTop: THREE.Vector2[];\n    var pointsNegativeTop: THREE.Vector2[];\n    var pointsPositiveBottom: THREE.Vector2[];\n    var pointsNegativeBottom: THREE.Vector2[];\n    var link: networkcube.Link;\n    var weights: number[];\n    var waveShape: WaveShape;\n    // var geometry:THREE.Geometry;\n    stepWidth = plotWidth / (endTime.id() - startTime.id());\n\n    // stepWidth = 1;\n    linkWeightScale.domain([0, Math.max(dgraph.links().weights().max(), dgraph.links().weights().min())]);\n    for (var i = 0; i < waveShapes.length; i++) {\n        if (waveShapes[i].positive)\n            scene.remove(waveShapes[i].positive);\n        if (waveShapes[i].negative)\n            scene.remove(waveShapes[i].negative);\n    }\n    waveShapes = [];\n\n    var isPositive: boolean;\n    for (var i = 0; i < dgraph.links().length; i++) {\n\n        link = dgraph.link(order[i].id);\n        weights = link.weights(startTime, endTime).toArray();\n        // create points\n        pointsPositiveTop = [];\n        pointsNegativeTop = [];\n        pointsPositiveBottom = [];\n        pointsNegativeBottom = [];\n\n        isPositive = weights[0] >= 0;\n        waveShape = new WaveShape();\n        waveShapes.push(waveShape);\n\n        pointsNegativeTop.push(new THREE.Vector2(0, 0));\n        pointsNegativeBottom.push(new THREE.Vector2(0, 0));\n        pointsPositiveTop.push(new THREE.Vector2(0, 0));\n        pointsPositiveBottom.push(new THREE.Vector2(0, 0));\n\n\n        for (var j = 0; j < weights.length; j++) {\n\n            if (weights[j] == undefined) {\n                // console.error('undefined')\n                weights[j] = 0.1;\n            }\n            // console.log(weights[j])\n            if (weights[j] >= 0 != isPositive) {\n\n                // when changes from pos to neg or vice versa, insert base line point.\n                pointsNegativeTop.push(new THREE.Vector2(stepWidth * (j - 1), 0));\n                pointsNegativeBottom.push(new THREE.Vector2(stepWidth * (j - 1), 0));\n                pointsPositiveTop.push(new THREE.Vector2(stepWidth * (j - 1), 0));\n                pointsPositiveBottom.push(new THREE.Vector2(stepWidth * (j - 1), 0));\n                isPositive = weights[j] >= 0;\n            }\n            if (weights[j] >= 0) {\n                pointsPositiveTop.push(new THREE.Vector2(stepWidth * j, linkWeightScale(weights[j])));\n                pointsPositiveBottom.push(new THREE.Vector2(stepWidth * j, -linkWeightScale(weights[j])));\n            } else {\n                pointsNegativeTop.push(new THREE.Vector2(stepWidth * j, linkWeightScale(-weights[j])));\n                pointsNegativeBottom.push(new THREE.Vector2(stepWidth * j, -linkWeightScale(-weights[j])));\n            }\n        }\n        pointsNegativeTop.push(new THREE.Vector2(stepWidth * j, 0));\n        pointsNegativeBottom.push(new THREE.Vector2(stepWidth * j, 0));\n        pointsPositiveTop.push(new THREE.Vector2(stepWidth * j, 0));\n        pointsPositiveBottom.push(new THREE.Vector2(stepWidth * j, 0));\n\n\n        if (pointsNegativeTop.length > 0) {\n            // Create negative value curve without filling\n\n            var curve = new THREE.SplineCurve(pointsNegativeTop.concat(pointsNegativeBottom.reverse()));\n            // var curve = new THREE.SplineCurve(pointsPositiveTop.concat(pointsPositiveBottom.reverse());\n            var path = new THREE.Path(curve.points);\n            var geometry = path.createPointsGeometry();\n            var material = new THREE.LineBasicMaterial({ color: COLOR_DEFAULT.getHex() });\n\n            splineObject = new THREE.Line(geometry, material);\n            // splineObject.position.y = -rowHeight*i-rowHeight/2;\n            waveShape.negative = splineObject;\n            this.scene.add(splineObject);\n        }\n\n        // // create positive value curve with black filling\n        if (pointsPositiveTop.length > 0) {\n\n            // create upper shape segments\n            var curve = new THREE.SplineCurve(pointsPositiveTop);\n            var shape = new THREE.Shape(curve.points);\n            var geometry = new THREE.ShapeGeometry(shape);\n            mesh = new THREE.Mesh(geometry, new THREE.MeshBasicMaterial({ color: COLOR_DEFAULT.getHex() }));\n\n            // create lower shape segments\n            curve = new THREE.SplineCurve(pointsPositiveBottom);\n            shape = new THREE.Shape(curve.points);\n            var geometry2 = new THREE.ShapeGeometry(shape);\n\n\n            // merge both geometries\n            // THREE.GeometryUtils.merge(geometry, geometry2);\n            geometry.merge(geometry2);\n            // create and add mesh\n            // mesh = THREE.SceneUtils.createMultiMaterialObject( geometry, [ new THREE.MeshLambertMaterial( { color: 0xeeeeee } )] );\n            mesh = new THREE.Mesh(geometry, new THREE.MeshBasicMaterial({ color: COLOR_DEFAULT.getHex() }));\n            // mesh.position.y = -rowHeight*i-rowHeight/2;\n            waveShape.positive = mesh;\n            this.scene.add(mesh);\n        }\n    }\n}\n\n// update links after highlight or selection\nvar transition: animations.Transition;\n\nfunction updateLinks() {\n    var links = dgraph.links().toArray();\n    var l: networkcube.Link;\n    var j;\n    transition = new animations.Transition(render)\n    var color;\n    var selections;\n    for (var i = 0; i < links.length; i++) {\n        l = links[i];\n\n        // CHECK AND UPDATE VISIBILITY\n        if (!l.isVisible()\n            || !l.source.isVisible()\n            || !l.target.isVisible()) {\n            // remove from display\n            if (waveShapes[l.id()].positive && waveShapes[l.id()].positive.material.opacity > 0) {\n                transition.add(new animations.OpacityAnimation(\n                    waveShapes[l.id()].positive,\n                    0,\n                    DURATION\n                ));\n            }\n            if (waveShapes[l.id()].negative && waveShapes[l.id()].negative.material.opacity > 0) {\n                transition.add(new animations.OpacityAnimation(\n                    waveShapes[l.id()].negative,\n                    0,\n                    DURATION\n                ));\n            }\n            continue;\n        }\n        // test whether not present already\n        if (waveShapes[l.id()].positive && waveShapes[l.id()].positive.material.opacity == 0) {\n            transition.add(new animations.OpacityAnimation(\n                waveShapes[l.id()].positive,\n                1,\n                DURATION\n            ));\n        }\n        if (waveShapes[l.id()].negative && waveShapes[l.id()].negative.material.opacity == 0) {\n            transition.add(new animations.OpacityAnimation(\n                waveShapes[l.id()].negative,\n                1,\n                DURATION\n            ));\n        }\n\n\n        // update highlight and selection color\n        color = undefined;\n        if (l.isHighlighted()) {\n            color = COLOR_HIGHLIGHT.getStyle();\n        } else if (l.isSelected()) {\n            color = networkcube.getPriorityColor(l);\n        }\n        if (!color)\n            color = COLOR_DEFAULT.getHex();\n\n        // set color\n        if (waveShapes[l.id()].positive) {\n            waveShapes[l.id()].positive.material.color = new THREE.Color(color);\n        }\n        if (waveShapes[l.id()].negative) {\n            waveShapes[l.id()].negative.material.color = new THREE.Color(color);\n        }\n        // update wave position (e.g. after reordering):\n        if (waveShapes[l.id()].positive) {\n            transition.add(new animations.TranslationAnimation(\n                waveShapes[l.id()].positive,\n                waveShapes[l.id()].positive.position.x,\n                -(rowHeight * visibleRank[l.id()] + rowHeight / 2),\n                // 0,\n                DURATION));\n            // waveShapes[i].positive.position.y = -rowHeight*rank[i]-rowHeight/2;\n        }\n        if (waveShapes[l.id()].negative) {\n            transition.add(new animations.TranslationAnimation(\n                waveShapes[l.id()].negative,\n                waveShapes[l.id()].negative.position.x,\n                -(rowHeight * visibleRank[l.id()] + rowHeight / 2),\n                // 0,\n                DURATION));\n            // waveShapes[i].negative.position.y = -rowHeight*rank[i]-rowHeight/2;\n        }\n    }\n\n    transition.start();\n\n    // update labels:\n    d3.selectAll('.row')\n        .attr('transform', (d, i) => {\n            var pos_i = visibleRank[d.id()];\n            if (pos_i > -1)\n                return 'translate(0, ' + (plotMargin.y + rowHeight * (pos_i + .5) + 6) + ')';\n            return 'translate(0, -100)'; // if not visible\n        })\n    // .transition()\n    // .duration(500)\n    // .style('opacity', function(d,i) {\n    //     if (!d.isVisible()) {\n    //         return 0;\n    //     }\n    //     else{\n    //         return 1;\n    //     }\n    // });\n\n\n}\n\nfunction updateNodes() {\n    var color;\n    var size;\n    var n;\n    d3.selectAll('.nodeLabel')\n        .style('fill', function (d) {\n            color = undefined;\n            if (d.isHighlighted()) {\n                color = COLOR_HIGHLIGHT.getStyle();\n            } else if (d.isSelected()) {\n                color = networkcube.getPriorityColor(d);\n            }\n            if (!color)\n                color = COLOR_DEFAULT.getStyle();\n            return color;\n        })\n        .style('font-size', function (d) {\n            if (d.isHighlighted()) {\n                size = 13;\n            } else {\n                size = 10;\n            }\n            return size;\n        })\n\n}\n\n\n\nfunction render() {\n    // var d = new Date();\n    // var begin = d.getTime()\n    renderer.render(scene, camera)\n    // d = new Date();\n    // console.log('>>>> RENDERED ', (d.getTime() - begin), ' ms.');\n}\n\nvar orderTimer: number;\n\n\nfunction updateRowHeight() {\n    rowHeight = parseInt(document.getElementById(\"rowHeightInput\").value);\n    stretchFactorY = rowHeight / HIGHT_ROW_DEFAULT;\n    // update row heights\n    for (var i = 0; i < waveShapes.length; i++) {\n        if (waveShapes[i].positive) {\n            waveShapes[i].positive.scale.y = stretchFactorY;\n            waveShapes[i].positive.position.y = -rowHeight * visibleRank[i] - rowHeight / 2;\n        }\n        if (waveShapes[i].negative) {\n            waveShapes[i].negative.scale.y = stretchFactorY;\n            waveShapes[i].negative.position.y = -rowHeight * visibleRank[i] - rowHeight / 2;\n        }\n    }\n    render();\n\n    d3.selectAll('.row')\n        .attr('transform', (d, i) => {\n            return 'translate(0, ' + (plotMargin.y + rowHeight * (visibleRank[i] + .5) + 6) + ')';\n        });\n\n}\n\nfunction updateRowOrdering() {\n    // reorder will be launched after time has been left alone for a wile\n    clearTimeout(this.orderTimer);\n    this.orderTimer = setTimeout((e) => {\n        console.log(\"sort\");\n        sortBySimilarity(4);\n        updateLinks();\n        render();\n        this.orderTimer = null;\n    }, 500);\n}\n\nfunction dscsort(a, b) {\n    return b.value - a.value;\n}\n\nfunction ascsort(a, b) {\n    return a.value - b.value;\n}\n\nfunction sortBySimilarity(referenceIndex) {\n    var data: number[][] = [];\n    for (var i = 0; i < dgraph.links().length; i++) {\n        var link = dgraph.link(i);\n        data[i] = link.weights(startTime, endTime).toArray();\n    }\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            if (!data[i][j] || data[i][j] == undefined)\n                data[i][j] = 0;\n        }\n    }\n    var similarity = Sorting.sortBySimilarity(data, referenceIndex, \"euclidean\");\n    for (var i = 0; i < order.length; i++) {\n        order[i].value = similarity[order[i].id];\n    }\n    order.sort(this.dscsort);\n\n    var str = \"\";\n    for (var i = 0; i < order.length; i++) {\n        rank[order[i].id] = i;\n        str += order[i].id + ' ';\n    }\n\n    updateVisibleRank();\n}\n\nfunction updateVisibleRank() {\n    var link;\n    var orderedLinks = dgraph.links().toArray().slice(0, dgraph.links().length);\n    orderedLinks.sort(byRank);\n\n    visibleRank = networkcube.array(-1, orderedLinks.length);\n\n    var visibleRankCount = 0;\n    for (var i = 0; i < orderedLinks.length; i++) {\n        link = orderedLinks[i]\n        if (link.isVisible() && link.source.isVisible() && link.target.isVisible()) {\n            visibleRank[link.id()] = visibleRankCount++;\n        }\n    }\n}\n\n\nfunction timezoomCallback(min: networkcube.Time, max: networkcube.Time, single:networkcube.Time, propagate: boolean) {\n\n    stretchFactorX = dgraph.times().length / (endTimeZoom.id() - startTimeZoom.id());\n\n    if ((endTimeZoom.id() - startTimeZoom.id()) != (max.id() - min.id())) {\n        for (var i = 0; i < waveShapes.length; i++) {\n            if (waveShapes[i].positive)\n                waveShapes[i].positive.scale.x = stretchFactorX;\n            if (waveShapes[i].negative)\n                waveShapes[i].negative.scale.x = stretchFactorX;\n        }\n    }\n    camera.position.x = plotWidth / 2 + (min.id() * stepWidth * stretchFactorX);\n\n    startTimeZoom = min;\n    endTimeZoom = max;\n\n    render();\n    updateRowOrdering();\n    updateTimeSelection();\n\n    timeZoomSlider.set(startTimeZoom, endTimeZoom)\n}\n\n// updates the time band in the background to indicate selected times.\nfunction updateTimeSelection() {\n    rectMeshLeft.position.x = (plotWidth / dgraph.times().length) * startTime.id() * stretchFactorX;\n    rectMeshLeft.scale.x = stretchFactorX;\n    rectMeshRight.position.x = (plotWidth / dgraph.times().length) * endTime.id() * stretchFactorX;\n    rectMeshRight.scale.x = stretchFactorX;\n}\n\n\n// NETWORK CUBE HANDLERS\n\n\nfunction updateEvent(m: networkcube.Message) {\n\n    if (m.type == 'filter' || m.type == 'selectionFilter') {\n        // not necessary every time!\n        updateVisibleRank();\n    }\n\n    updateLinks()\n    updateNodes()\n    render();\n}\n\n\nfunction timeRangeHandler(m: networkcube.TimeRangeMessage) {\n    startTime = dgraph.time(m.startId)\n    endTime = dgraph.time(m.endId)\n\n    timeSlider.set(startTime, endTime)\n    updateTimeSelection();\n\n    updateRowOrdering();\n\n    render();\n}\n\n\n\n\n// INTERACTION + LISTENERS\nvar hoveredLink: networkcube.Link;\nvar lastClickMoment = window.performance.now();\n\nfunction mouseMove(e) {\n    // sometimes we send a highlight too soon after a click, and\n    // the selection gets lost, because this message will erase the\n    // previous one. So we are going to give it some breathing room\n    // Hopefully this is enough time for the other windows to get their\n    // events from 'storage' and process them. else there are more \n    // robust ways of doing it, but they would require more clever code.\n    if (window.performance.now() - lastClickMoment < 400) {\n        return;\n    }\n    hoveredLink = undefined;\n    var mpos = glutils.getMousePos(canvas, e.clientX, e.clientY)\n\n    var hoveredLinkId = visibleRank.indexOf(Math.floor(mpos.y / rowHeight));\n\n    if (dgraph.link(hoveredLinkId)) {\n        hoveredLink = dgraph.link(hoveredLinkId);\n        networkcube.highlight('set',\n            <networkcube.ElementCompound>{\n                links: [hoveredLink],\n            });\n    } else {\n        networkcube.highlight('reset');\n    }\n}\n\nfunction click(e) {\n    lastClickMoment = window.performance.now();\n\n    if (hoveredLink) {\n        if (!hoveredLink.isSelected(dgraph.getCurrentSelection())) {\n            console.log('adding to selection', hoveredLink.source.label(), hoveredLink.target.label());\n            networkcube.selection('add', <networkcube.ElementCompound>{ links: [hoveredLink] });\n        } else {\n            networkcube.selection('remove', <networkcube.ElementCompound>{ links: [hoveredLink] });\n        }\n    }\n}\n\n\nfunction byRank(a, b) {\n    return rank[a.id()] - rank[b.id()];\n}\n"],"sourceRoot":"/source/"}